# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Basic .NET CI

on:
  push:
    branches: [ "master" ]
    paths-ignore: [ "docs/*" ]
  pull_request:
    types: [opened]
  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    outputs:
      static: 'hello world'
      dynamic: ${{ steps.Test.outputs.dynamic }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore --locked-mode
    - name: Test
      id: Test
      run: |
        result=$(dotnet test --no-restore)
        echo "dynamic="$result >> "$GITHUB_OUTPUT"
  
  build:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Read test outputs #1
      run: echo "${{ needs.test.outputs.static }}"
    - name: Read test outputs #2
      run: echo "${{ needs.test.outputs.dynamic }}"  
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore GHForkDemo/GHForkDemo.csproj --locked-mode
    - name: Publish
      run: dotnet publish GHForkDemo/GHForkDemo.csproj -o output/publish --no-restore 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: output
        path: output/publish

    
